from django.db import models
from django.utils import timezone


class QualityPrinciple(models.Model):
    """–ü—Ä–∏–Ω—Ü–∏–ø—ã —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞"""
    title = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞")
    title_kg = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ (–∫—ã—Ä–≥—ã–∑—Å–∫–∏–π)", blank=True)
    title_en = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π)", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞")
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ (–∫—ã—Ä–≥—ã–∑—Å–∫–∏–π)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π)", blank=True)
    
    icon = models.CharField(max_length=50, verbose_name="–ò–∫–æ–Ω–∫–∞", default="üåü")
    order = models.PositiveIntegerField(verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", default=0)
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–ü—Ä–∏–Ω—Ü–∏–ø –∫–∞—á–µ—Å—Ç–≤–∞"
        verbose_name_plural = "–ü—Ä–∏–Ω—Ü–∏–ø—ã –∫–∞—á–µ—Å—Ç–≤–∞"
        ordering = ['order']
    
    def __str__(self):
        return self.title


class QualityDocument(models.Model):
    """–î–æ–∫—É–º–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞"""
    DOCUMENT_TYPES = [
        ('pdf', 'PDF'),
        ('doc', 'DOC'),
        ('docx', 'DOCX'),
        ('xls', 'XLS'),
        ('xlsx', 'XLSX'),
    ]
    
    DOCUMENT_CATEGORIES = [
        ('policy', '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞'),
        ('manual', '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É'),
        ('procedure', '–ü—Ä–æ—Ü–µ–¥—É—Ä—ã'),
        ('instruction', '–†–∞–±–æ—á–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'),
        ('record', '–ó–∞–ø–∏—Å–∏'),
        ('regulation', '–ü–æ–ª–æ–∂–µ–Ω–∏—è'),
        ('standard', '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã'),
    ]
    
    title = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    title_kg = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (KG)", blank=True)
    title_en = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (EN)", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ", blank=True)
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (KG)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (EN)", blank=True)
    
    category = models.CharField(max_length=20, choices=DOCUMENT_CATEGORIES, verbose_name="–ö–∞—Ç–µ–≥–æ—Ä–∏—è")
    document_type = models.CharField(max_length=10, choices=DOCUMENT_TYPES, verbose_name="–¢–∏–ø —Ñ–∞–π–ª–∞")
    file_size = models.CharField(max_length=20, verbose_name="–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞", blank=True)
    file_path = models.FileField(upload_to='hsm/documents/', verbose_name="–§–∞–π–ª", blank=True, null=True)
    external_url = models.URLField(verbose_name="–í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞", blank=True)
    
    version = models.CharField(max_length=20, verbose_name="–í–µ—Ä—Å–∏—è", default="1.0")
    approval_date = models.DateField(verbose_name="–î–∞—Ç–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è", null=True, blank=True)
    effective_date = models.DateField(verbose_name="–î–∞—Ç–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —Å–∏–ª—É", null=True, blank=True)
    expiry_date = models.DateField(verbose_name="–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è", null=True, blank=True)
    
    order = models.PositiveIntegerField(verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", default=0)
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    download_count = models.PositiveIntegerField(default=0, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–î–æ–∫—É–º–µ–Ω—Ç –∫–∞—á–µ—Å—Ç–≤–∞"
        verbose_name_plural = "–î–æ–∫—É–º–µ–Ω—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞"
        ordering = ['category', 'order']
    
    def __str__(self):
        return f"{self.title} v{self.version}"


class QualityProcessGroup(models.Model):
    """–ì—Ä—É–ø–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞"""
    title = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
    title_kg = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (KG)", blank=True)
    title_en = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (EN)", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã", blank=True)
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã (KG)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã (EN)", blank=True)
    
    icon = models.CharField(max_length=50, verbose_name="–ò–∫–æ–Ω–∫–∞", default="üîÑ")
    order = models.PositiveIntegerField(verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", default=0)
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–ì—Ä—É–ø–ø–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
        verbose_name_plural = "–ì—Ä—É–ø–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
        ordering = ['order']
    
    def __str__(self):
        return self.title


class QualityProcess(models.Model):
    """–ü—Ä–æ—Ü–µ—Å—Å—ã —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞"""
    group = models.ForeignKey(QualityProcessGroup, on_delete=models.CASCADE, related_name='processes', verbose_name="–ì—Ä—É–ø–ø–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
    
    title = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞")
    title_kg = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ (KG)", blank=True)
    title_en = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ (EN)", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞", blank=True)
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ (KG)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ (EN)", blank=True)
    
    responsible_person = models.CharField(max_length=200, verbose_name="–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ", blank=True)
    responsible_department = models.CharField(max_length=200, verbose_name="–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", blank=True)
    
    order = models.PositiveIntegerField(verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", default=0)
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–ü—Ä–æ—Ü–µ—Å—Å –∫–∞—á–µ—Å—Ç–≤–∞"
        verbose_name_plural = "–ü—Ä–æ—Ü–µ—Å—Å—ã –∫–∞—á–µ—Å—Ç–≤–∞"
        ordering = ['group__order', 'order']
    
    def __str__(self):
        return f"{self.group.title} - {self.title}"


class QualityStatistic(models.Model):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞"""
    title = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è")
    title_kg = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è (KG)", blank=True)
    title_en = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è (EN)", blank=True)
    
    value = models.CharField(max_length=50, verbose_name="–ó–Ω–∞—á–µ–Ω–∏–µ")
    unit = models.CharField(max_length=50, verbose_name="–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ", blank=True)
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (KG)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (EN)", blank=True)
    
    icon = models.CharField(max_length=50, verbose_name="–ò–∫–æ–Ω–∫–∞", default="üìä")
    order = models.PositiveIntegerField(verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", default=0)
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞"
        verbose_name_plural = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞"
        ordering = ['order']
    
    def __str__(self):
        return f"{self.title}: {self.value}"


class QualityAdvantage(models.Model):
    """–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞"""
    title = models.CharField(max_length=200, verbose_name="–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ")
    title_kg = models.CharField(max_length=200, verbose_name="–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ (KG)", blank=True)
    title_en = models.CharField(max_length=200, verbose_name="–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ (EN)", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ", blank=True)
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (KG)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (EN)", blank=True)
    
    icon = models.CharField(max_length=50, verbose_name="–ò–∫–æ–Ω–∫–∞", default="‚úì")
    order = models.PositiveIntegerField(verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", default=0)
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –∫–∞—á–µ—Å—Ç–≤–∞"
        verbose_name_plural = "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–∞—á–µ—Å—Ç–≤–∞"
        ordering = ['order']
    
    def __str__(self):
        return self.title


class QualitySettings(models.Model):
    """–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞"""
    title = models.CharField(max_length=200, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    title_kg = models.CharField(max_length=200, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (KG)", blank=True)
    title_en = models.CharField(max_length=200, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (EN)", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (KG)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (EN)", blank=True)
    
    about_text = models.TextField(verbose_name="–û —Å–∏—Å—Ç–µ–º–µ –∫–∞—á–µ—Å—Ç–≤–∞")
    about_text_kg = models.TextField(verbose_name="–û —Å–∏—Å—Ç–µ–º–µ –∫–∞—á–µ—Å—Ç–≤–∞ (KG)", blank=True)
    about_text_en = models.TextField(verbose_name="–û —Å–∏—Å—Ç–µ–º–µ –∫–∞—á–µ—Å—Ç–≤–∞ (EN)", blank=True)
    
    iso_standard = models.CharField(max_length=50, verbose_name="–°—Ç–∞–Ω–¥–∞—Ä—Ç ISO", default="ISO 9001:2015")
    compliance_percentage = models.CharField(max_length=10, verbose_name="–ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è", default="100%")
    
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"
        verbose_name_plural = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"
    
    def __str__(self):
        return self.title


class Leadership(models.Model):
    """–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –í–®–ú"""
    LEADERSHIP_TYPES = [
        ('director', '–î–∏—Ä–µ–∫—Ç–æ—Ä'),
        ('deputy_director', '–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞'),
        ('department_head', '–ó–∞–≤–µ–¥—É—é—â–∏–π –∫–∞—Ñ–µ–¥—Ä–æ–π'),
        ('dean', '–î–µ–∫–∞–Ω'),
        ('vice_dean', '–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –¥–µ–∫–∞–Ω–∞'),
    ]
    
    
    # –ò–º—è
    name = models.CharField(max_length=200, verbose_name="–§–ò–û")
    name_kg = models.CharField(max_length=200, verbose_name="–§–ò–û (KG)", blank=True)
    name_en = models.CharField(max_length=200, verbose_name="–§–ò–û (EN)", blank=True)
    
    # –î–æ–ª–∂–Ω–æ—Å—Ç—å
    position = models.CharField(max_length=200, verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å")
    position_kg = models.CharField(max_length=200, verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å (KG)", blank=True)
    position_en = models.CharField(max_length=200, verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å (EN)", blank=True)
    
    # –£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å
    degree = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å")
    degree_kg = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å (KG)", blank=True)
    degree_en = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å (EN)", blank=True)
    
    # –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
    experience = models.CharField(max_length=100, verbose_name="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã")
    experience_kg = models.CharField(max_length=100, verbose_name="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (KG)", blank=True)
    experience_en = models.CharField(max_length=100, verbose_name="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (EN)", blank=True)
    
    # –ë–∏–æ–≥—Ä–∞—Ñ–∏—è
    bio = models.TextField(verbose_name="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è", blank=True)
    bio_kg = models.TextField(verbose_name="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è (KG)", blank=True)
    bio_en = models.TextField(verbose_name="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è (EN)", blank=True)
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è (JSON –ø–æ–ª–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π)
    achievements = models.JSONField(default=list, verbose_name="–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", blank=True)
    achievements_kg = models.JSONField(default=list, verbose_name="–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è (KG)", blank=True)
    achievements_en = models.JSONField(default=list, verbose_name="–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è (EN)", blank=True)
    
    # –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç/–∫–∞—Ñ–µ–¥—Ä–∞
    department = models.CharField(max_length=50,  verbose_name="–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç(RU)", blank=True)
    department_kg = models.CharField(max_length=200, verbose_name="–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç (KG)", blank=True)
    department_en = models.CharField(max_length=200, verbose_name="–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç (EN)", blank=True)
    
    # –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–¥–ª—è –∑–∞–≤–µ–¥—É—é—â–∏—Ö –∫–∞—Ñ–µ–¥—Ä–∞–º–∏)
    specialization = models.TextField(verbose_name="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è", blank=True)
    specialization_kg = models.TextField(verbose_name="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (KG)", blank=True)
    specialization_en = models.TextField(verbose_name="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (EN)", blank=True)
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–¥–ª—è –∑–∞–≤–µ–¥—É—é—â–∏—Ö)
    staff_count = models.CharField(max_length=100, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", blank=True)
    staff_count_kg = models.CharField(max_length=100, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (KG)", blank=True)
    staff_count_en = models.CharField(max_length=100, verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (EN)", blank=True)
    
    # –ö–æ–Ω—Ç–∞–∫—Ç—ã
    email = models.EmailField(verbose_name="Email", blank=True)
    phone = models.CharField(max_length=20, verbose_name="–¢–µ–ª–µ—Ñ–æ–Ω", blank=True)
    
    # –§–æ—Ç–æ
    image = models.ImageField(upload_to='leadership/photos/', verbose_name="–§–æ—Ç–æ", blank=True)
    
    # –¢–∏–ø —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –∏ —Å—Ç–∞—Ç—É—Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞
    leadership_type = models.CharField(max_length=20, choices=LEADERSHIP_TYPES, verbose_name="–¢–∏–ø —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞")
    is_director = models.BooleanField(default=False, verbose_name="–Ø–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    order = models.IntegerField(default=0, verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å"
        verbose_name_plural = "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
        ordering = ['order', 'name']
    
    def __str__(self):
        return f"{self.name} - {self.position}"


class Faculty(models.Model):
    """–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä—Å–∫–æ-–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤ –í–®–ú"""
    ACADEMIC_DEGREES = [
        ('candidate', '–ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞—É–∫'),
        ('doctor', '–î–æ–∫—Ç–æ—Ä –Ω–∞—É–∫'),
        ('phd', 'PhD'),
        ('master', '–ú–∞–≥–∏—Å—Ç—Ä'),
        ('bachelor', '–ë–∞–∫–∞–ª–∞–≤—Ä'),
    ]
    
    POSITIONS = [
        ('professor', '–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä'),
        ('associate_professor', '–î–æ—Ü–µ–Ω—Ç'),
        ('senior_lecturer', '–°—Ç–∞—Ä—à–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'),
        ('lecturer', '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'),
        ('assistant', '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'),
        ('head_of_department', '–ó–∞–≤–µ–¥—É—é—â–∏–π –∫–∞—Ñ–µ–¥—Ä–æ–π'),
        ('dean', '–î–µ–∫–∞–Ω'),
        ('vice_dean', '–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –¥–µ–∫–∞–Ω–∞'),
    ]
    
    first_name = models.CharField(max_length=100, verbose_name="–ò–º—è")
    last_name = models.CharField(max_length=100, verbose_name="–§–∞–º–∏–ª–∏—è")
    middle_name = models.CharField(max_length=100, verbose_name="–û—Ç—á–µ—Å—Ç–≤–æ", blank=True)
    
    first_name_kg = models.CharField(max_length=100, verbose_name="–ò–º—è (KG)", blank=True)
    last_name_kg = models.CharField(max_length=100, verbose_name="–§–∞–º–∏–ª–∏—è (KG)", blank=True)
    middle_name_kg = models.CharField(max_length=100, verbose_name="–û—Ç—á–µ—Å—Ç–≤–æ (KG)", blank=True)
    
    first_name_en = models.CharField(max_length=100, verbose_name="–ò–º—è (EN)", blank=True)
    last_name_en = models.CharField(max_length=100, verbose_name="–§–∞–º–∏–ª–∏—è (EN)", blank=True)
    middle_name_en = models.CharField(max_length=100, verbose_name="–û—Ç—á–µ—Å—Ç–≤–æ (EN)", blank=True)
    
    position = models.CharField(max_length=50, choices=POSITIONS, verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å")
    position_custom = models.CharField(max_length=200, verbose_name="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å", blank=True)
    position_kg = models.CharField(max_length=200, verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å (KG)", blank=True)
    position_en = models.CharField(max_length=200, verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å (EN)", blank=True)
    
    academic_degree = models.CharField(max_length=20, choices=ACADEMIC_DEGREES, verbose_name="–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å", blank=True)
    academic_degree_kg = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å (KG)", blank=True)
    academic_degree_en = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å (EN)", blank=True)
    academic_title = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–æ–µ –∑–≤–∞–Ω–∏–µ", blank=True)
    academic_title_kg = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–æ–µ –∑–≤–∞–Ω–∏–µ (KG)", blank=True)
    academic_title_en = models.CharField(max_length=200, verbose_name="–£—á–µ–Ω–æ–µ –∑–≤–∞–Ω–∏–µ (EN)", blank=True)
    
    photo = models.ImageField(upload_to='faculty/photos/', verbose_name="–§–æ—Ç–æ", blank=True)
    
    email = models.EmailField(verbose_name="Email", blank=True)
    phone = models.CharField(max_length=20, verbose_name="–¢–µ–ª–µ—Ñ–æ–Ω", blank=True)
    office = models.CharField(max_length=100, verbose_name="–ö–∞–±–∏–Ω–µ—Ç", blank=True)
    
    bio = models.TextField(verbose_name="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è", blank=True)
    bio_kg = models.TextField(verbose_name="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è (KG)", blank=True)
    bio_en = models.TextField(verbose_name="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è (EN)", blank=True)
    
    specialization = models.TextField(verbose_name="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è", blank=True)
    specialization_kg = models.TextField(verbose_name="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (KG)", blank=True)
    specialization_en = models.TextField(verbose_name="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (EN)", blank=True)
    
    education = models.TextField(verbose_name="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", blank=True)
    education_kg = models.TextField(verbose_name="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (KG)", blank=True)
    education_en = models.TextField(verbose_name="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (EN)", blank=True)
    
    experience = models.TextField(verbose_name="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã", blank=True)
    experience_kg = models.TextField(verbose_name="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (KG)", blank=True)
    experience_en = models.TextField(verbose_name="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (EN)", blank=True)
    
    publications = models.TextField(verbose_name="–ü—É–±–ª–∏–∫–∞—Ü–∏–∏", blank=True)
    publications_kg = models.TextField(verbose_name="–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ (KG)", blank=True)
    publications_en = models.TextField(verbose_name="–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ (EN)", blank=True)
    
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–µ–Ω")
    order = models.IntegerField(default=0, verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
        verbose_name_plural = "–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä—Å–∫–æ-–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤"
        ordering = ['order', 'last_name', 'first_name']
    
    def __str__(self):
        return f"{self.last_name} {self.first_name} {self.middle_name}".strip()
    
    @property
    def full_name(self):
        return f"{self.last_name} {self.first_name} {self.middle_name}".strip()


class Accreditation(models.Model):
    """–ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –í–®–ú"""
    ACCREDITATION_TYPES = [
        ('national', '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è'),
        ('international', '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è'),
        ('institutional', '–ò–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è'),
        ('programmatic', '–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è'),
    ]
    
    name = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ")
    name_kg = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ (KG)", blank=True)
    name_en = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ (EN)", blank=True)
    
    organization = models.CharField(max_length=200, verbose_name="–ê–∫–∫—Ä–µ–¥–∏—Ç—É—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è")
    organization_kg = models.CharField(max_length=200, verbose_name="–ê–∫–∫—Ä–µ–¥–∏—Ç—É—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è (KG)", blank=True)
    organization_en = models.CharField(max_length=200, verbose_name="–ê–∫–∫—Ä–µ–¥–∏—Ç—É—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è (EN)", blank=True)
    
    accreditation_type = models.CharField(max_length=20, choices=ACCREDITATION_TYPES, verbose_name="–¢–∏–ø –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏")
    accreditation_type_kg = models.CharField(max_length=100, verbose_name="–¢–∏–ø –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ (KG)", blank=True)
    accreditation_type_en = models.CharField(max_length=100, verbose_name="–¢–∏–ø –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ (EN)", blank=True)
    
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ", blank=True)
    description_kg = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (KG)", blank=True)
    description_en = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ (EN)", blank=True)
    
    certificate_image = models.ImageField(upload_to='accreditations/certificates/', verbose_name="–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç", blank=True)
    organization_logo = models.ImageField(upload_to='accreditations/logos/', verbose_name="–õ–æ–≥–æ—Ç–∏–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", blank=True)
    
    issue_date = models.DateField(verbose_name="–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏")
    expiry_date = models.DateField(verbose_name="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è", blank=True, null=True)
    
    certificate_number = models.CharField(max_length=100, verbose_name="–ù–æ–º–µ—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞", blank=True)
    
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–Ω–∞")
    order = models.IntegerField(default=0, verbose_name="–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "–ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è"
        verbose_name_plural = "–ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏"
        ordering = ['order', '-issue_date']
    
    def __str__(self):
        return f"{self.name} - {self.organization}"
    
    @property
    def is_valid(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –ª–∏ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è"""
        if self.expiry_date:
            return timezone.now().date() <= self.expiry_date
        return True


